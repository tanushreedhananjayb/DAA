#include <stdio.h>
int binarySearch(int a[], int l, int r, int x)
{

 if (r >= l)
 {
 int mid = l + (r - l) / 2; // calculating the midpoint
 if (a[mid] == x) // If the element is present at the middle itself
 return mid;
 // If element is smaller than mid, then it can only be present in left subarray
 if (a[mid] > x)
 {
 return binarySearch(a, l, mid - 1, x);
 }
 // Else the element can only be present in right subarray
 return binarySearch(a, mid + 1, r, x);
 }
 // We reach here when element is not present in array
 return -1;
}
int main(void)
{
int n,i,a[10],x;
printf("Enter the number of element you want in array\n");
scanf("%d",&n);
printf("Enter the elements of an array\n");
for (i=0;i<n;i++)
{
 scanf("%d",&a[i]);
}
printf("Elements in Array \n");
for (i=0;i<n;i++)
{
 printf("%d ",a[i]);
}
 // element to be searched
printf("\nEnter the element to be search in an array\n");
scanf("%d",&x);
 // calling binary search
 int index = binarySearch(a, 0, n - 1, x);
 if (index == -1)
{
 printf("Element is not present in array");
 }
 else {
 printf("Element is present at index %d", index);
 }
 return 0;
}
